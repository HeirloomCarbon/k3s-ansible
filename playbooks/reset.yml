---
- name: Undo cluster setup
  hosts: k3s_cluster
  become: true
  tasks:
    - name: Run K3s Uninstall script [server]
      when: "'server' in group_names"
      ansible.builtin.command:
        cmd: k3s-uninstall.sh
        removes: /var/lib/rancher/k3s/*
    - name: Run K3s Uninstall script [agent]
      when: "'agent' in group_names"
      ansible.builtin.command:
        cmd: k3s-agent-uninstall.sh
        removes: /var/lib/rancher/k3s/*
    - name: Remove user kubeconfig
      ansible.builtin.file:
        path: ~{{ ansible_user }}/.kube/config
        state: absent
    - name: Remove k3s install script
      ansible.builtin.file:
        path: /usr/local/bin/k3s-install.sh
        state: absent
    - name: Remove contents of K3s server location
      when: k3s_server_location is defined
      ansible.builtin.shell:
        cmd: "rm -rf {{ k3s_server_location }}/*"
        removes: "{{ k3s_server_location }}/*"
    - name: Remove K3s config
      when: server_config_yaml is defined
      ansible.builtin.file:
        path: /etc/rancher/k3s/config.yaml
        state: absent

- name: Undo user setup
  hosts: server
  tasks:
    - name: Remove K3s commands from ~/.bashrc
      ansible.builtin.lineinfile:
        path: "~{{ ansible_user }}/.bashrc"
        search_string: "Added by k3s-ansible"
        state: absent

- name: Undo kubectl setup
  hosts: server
  become: true
  tasks:
  - name: Unlink kubectl symlink
    file:
      path: "/usr/bin/kubectl"
      state: absent
  - name: Check what kubectl versions exist
    find:
      paths: /opt
      patterns: "kubectl-*"
      file_type: directory
    register: kubectl_versions
  - name: Display found kubectl versions
    debug:
      msg: "Found kubectl versions: {{ kubectl_versions.files | map(attribute='path') | list }}"
  - name: Remove all kubectl versions
    file:
      path: "{{ item.path }}"
      state: absent
    with_items: "{{ kubectl_versions.files }}"